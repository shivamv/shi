<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Your awesome title</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://yourdomain.com/</link>
    <atom:link href="http://yourdomain.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 29 May 2015 11:15:56 +0530</pubDate>
    <lastBuildDate>Fri, 29 May 2015 11:15:56 +0530</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>DEVELOPMENT TERMINOLOGY</title>
        <description>&lt;p&gt;What is TDD and Unit testing ?&lt;/p&gt;

&lt;p&gt;–&amp;gt;TDD stands for test driven development wherein you write tests which fails expectedly and eventually you refactor the code to produce the desired output.&lt;/p&gt;

&lt;p&gt;Unit Testing?&lt;/p&gt;

&lt;p&gt;–&amp;gt; Unit testing is a software testing method by which individual units of source code, sets of one or more computer program modules together with associated control data, usage procedures, and operating procedures, are tested to determine whether they are fit for use.&lt;/p&gt;

&lt;p&gt;S in SOLID ?&lt;/p&gt;

&lt;p&gt;–&amp;gt; S in SOLID stands for single responsibility.In object oriented programming the single responsibility principle states that every class should have responsibility over a single part of the functionality provided by the software, and that responsibility should be entirely encapsulated by the class. All its services should be narrowly aligned with that responsibility.&lt;/p&gt;

&lt;p&gt;Duck Typing in Ruby&lt;/p&gt;

&lt;p&gt;Wiki says : In computer programming with object oriented programming languages, duck typing is a layer of programming language and design rules on top of typing.&lt;/p&gt;

&lt;p&gt;Duck typing is concerned with establishing the suitability of an object for some purpose. With normal typing, suitability is assumed to be determined by an object’s type only. In duck typing, an object’s suitability is determined by the presence of certain methods and properties (with appropriate meaning), rather than the actual type of the object.&lt;/p&gt;

&lt;p&gt;In Ruby, we rely less on the type (or class) of an object and more on its capabilities. Hence, Duck Typing means an object type is defined by what it can do, not by what it is. Duck Typing refers to the tendency of Ruby to be less concerned with the class of an object and more concerned with what methods can be called on it and what operations can be performed on it. In Ruby, we would use respond_to? or might simply pass an object to a method and know that an exception will be raised if it is used inappropriately.&lt;/p&gt;

&lt;p&gt;link : http://rubylearning.com/satishtalim/duck_typing.html&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Using git :&lt;/p&gt;

&lt;p&gt;Create a repository by git init and then select one of the options listed to move ahead.&lt;/p&gt;

&lt;p&gt;git clone&lt;/p&gt;

&lt;p&gt;git status&lt;/p&gt;

&lt;p&gt;git commit -m “New Commit”&lt;/p&gt;

&lt;p&gt;git remote add origin git@github.com:shivamv/Blog_using_Ruby_on_Rails.git&lt;/p&gt;

&lt;p&gt;git add .&lt;/p&gt;

&lt;p&gt;git push -u origin master           ——&amp;gt; specifing the branch&lt;/p&gt;

&lt;p&gt;Forking a repository:&lt;/p&gt;

&lt;p&gt;git clone  [link] —-&amp;gt; from the repository forked&lt;/p&gt;

&lt;p&gt;git pull&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;SSH and HTTPS login in Git Version Control:&lt;/p&gt;

&lt;p&gt;Https uses cache to login in the account for a specific amount of time whereas in SSH your computer is permannently registered on the Git&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Test Driven Development in Ruby&lt;/p&gt;

&lt;p&gt;https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes —&amp;gt; Git Version Control management!&lt;/p&gt;

&lt;p&gt;Usage of rspec and rakefile for writing specs/test cases and then code the problem accordingly.&lt;/p&gt;

&lt;p&gt;Usage of rake : http://jasonseifer.com/2010/04/06/rake-tutorial&lt;/p&gt;

&lt;hr /&gt;
</description>
        <pubDate>Fri, 29 May 2015 00:54:46 +0530</pubDate>
        <link>http://yourdomain.com/jekyll/update/2015/05/29/New_Post.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2015/05/29/New_Post.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>ETHICS FOR SOFTWARE DEVELOPMENT!</title>
        <description>&lt;p&gt;Craft simple, straightforward, understandable code&lt;/p&gt;

&lt;p&gt;1) Try to implement single class functionality&lt;/p&gt;

&lt;p&gt;2) Red Red Green methodology : wherein you write the tests then get a failure and then refactor the code&lt;/p&gt;

&lt;p&gt;3) Modules are written in a separate class and then included in the file in which they are used; they’ll be included in helper_spec.rb in case of testing&lt;/p&gt;

&lt;p&gt;4) A class will be made for every different entity&lt;/p&gt;
</description>
        <pubDate>Fri, 29 May 2015 00:35:37 +0530</pubDate>
        <link>http://yourdomain.com/jekyll/update/2015/05/29/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2015/05/29/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
